IDEA代码模板:(按Tab键补全)
1.Postfix Completion
(1)m(b!) ---> m(!b)
(2)o.arg ---> call(o)
(3)value.assert ---> assert value
(4)o.cast ---> (() o)
(5)o.castvar ---> String o = (String)o
(6)b.else ---> if (!b) {}
(7)values.for ---> for (int value : values) {}
(8)foo.fori ---> for (int i = 0; i < foo; i++) {}
(9)value.format  ---> String.format(value, )
(10)foo.forr ---> for (int i = foo; i > 0; i--) {}
(11)b.if ---> if (b) {}
(12)o.inst ---> o instanceof  ? (() o) : null
(13)o.instanceof ---> o instanceof  ? (() o) : null
(14)values.iter ---> for (int value : values) {}
(15)foo().lambda ---> () -> foo()
(16)Foo.new ---> new Foo()
(17)o.nn ---> if (o != null){}
(18)m(b.not) ---> m(!b)
(19)o.notnull ---> if (o != null){}
(20)o.null ---> if (o == null){}
(21)intValue.opt ---> OptionalInt.of(intValue) 
(22)doubleValue.opt ---> OptionalDouble.of(doubleValue)
(23)longValue.opt ---> OptionalLong.of(longValue)
(24)objValue.opt ---> Optional.ofNullable(objValue)
(25)o.par ---> (o)
(26)o.reqnonnull ---> Objects.requireNonNull(o).reqnonnull
(27)"result".return ---> return "result"
(28)b.sout ---> System.out.println(b)
(29)array.stream ---> Arrays.stream(array)
(30)foo.switch ---> switch (foo) {}
(31)o.synchronized ---> synchronized (o) {}
(32)new RuntimeException("error").throw ---> throw new RuntimeException("error")
(33)m().try ---> try {m();} catch(CheckedException e) {e.printStackTrace();}
(34)getStream().twr ---> try (AutoCloseable stream = getStream()) {} catch (Exception e) {}
(35)o instanceof String.var ---> boolean foo = o instanceof String
(36)x.while ---> while (x) {}

2.Code Templates-other
(38)geti //插入单例方法 getInstance
public static $CLASS_NAME$ getInstance() {
  return $VALUE$;
}
(39)ifn //插入 ''if null'' 语句
if ($VAR$ == null) {
$END$
}
(40)inn //插入 ''if not null'' 语句
if ($VAR$ != null) {
$END$
}
(41)inst //使用 instanceof 检查对象类型并将其降级
if ($EXPR$ instanceof $TYPE$) {
  $TYPE$ $VAR1$ = ($TYPE$)$EXPR$;
  $END$
}
(42)lazy //执行延迟初始化
if ($VAR$ == null) {
    $VAR$ = new $TYPE$($END$);
}
(43)lst //获取数组的最后一个元素
$ARRAY$[$ARRAY$.length - 1]
(44)mn //为变量设置较小的值
$VAR$ = Math.min($VAR$, $END$);
(45)mx //为变量设置更大的值
$VAR$ = Math.max($VAR$, $END$);
(46)psvm //main() 方法声明
public static void main(String[] args){
  $END$
}
(47)toar //将 java.util.Collection 的元素存储到数组中
$COLLECTION$.toArray(new $COMPONENT_TYPE$[$COLLECTION$.size()])$END$

3.Code Templates-output
(48)serr //打印一个字符串到 System.err
System.err.println($END$);
(49)souf //打印一个格式化字符串到 System.out
System.out.printf("$END$");
(50)sout //打印一个字符串到 System.out
System.out.println($END$);
(51)soutm //打印当前的类名和方法名到 System.out
System.out.println("$CLASS_NAME$.$METHOD_NAME$");
(52)soutp //打印方法参数的名称和值到 System.out
System.out.println($FORMAT$);
(53)soutv //打印一个值 System.out
System.out.println("$EXPR_COPY$ = " + $EXPR$);

4.Code Templates-plain
(54)prsf ---> private static final
(55)psf ---> public static final 
(56)psfi ---> public static final int
(57)psfs ---> public static final String 
(58)St ---> String 
(59)thr ---> throw new 
