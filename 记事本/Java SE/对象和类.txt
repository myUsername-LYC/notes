1.定义
类：是一组相关属性和行为的集合。是一类事物的模板，是抽象的。
对象：是一类事物的具体体现。对象是类的一个实体，必然具备类的属性和行为。
（1）在现实事物中，属性就是该事物的状态信息，行为就是该事物能够做什么。
（2）类是对象的模板，对象是类的实体。

2.（类的定义）使用成员变量描述属性，成员方法描述行为：
①成员变量直接定义在类中，在方法外边；
②成员方法的定义不需要写static关键字；

3.对象的创建和使用：
（1）导包
格式：import 包名称.类名称；  （对于对象和类在同一个包的情况可以省略导包语句）
（2）创建
格式：类名称 对象名 = new 类名称（）；
Student stu = new Student（）；
（3）使用
使用成员变量：对象名.成员变量名
使用成员方法：对象名.成员方法名（参数）
（想用谁，就用对象名点儿谁）
 
4.面向对象语言的三大特征：封装性、继承性、多态。

5.成员变量和局部变量的区别：
（1）定义的位置不一样：
局部变量：定义在方法内部
成员变量：在方法外，直接在类中定义
（2）作用范围不一样：
局部变量：只有方法当中能够使用，出了方法后不能再用
成员变量：整个类都能够使用
（3）默认值不一样：
局部变量：没有默认值，如果要想使用，必须手动进行赋值
成员变量：如果没有赋值，会有默认值，规则和数组一样
（4）内存的位置不一样：
局部变量：位于栈之中
成员变量：位于堆之中
（5）生命周期不一样;
局部变量：随着方法进栈而诞生，随着方法出栈而消亡
成员变量：随着对象创建而诞生，随着对象被垃圾回收而消亡

6.private的使用：当在某个变量前加上private修饰词时，该变量在所属类中不受影响，
但在其他类中不能够随意访问，需要设置getter/setter进行访问

7.boolean类型的getter方法形式是isXxx（）；

8.当方法的局部变量和类的成员变量重名的时候，根据“就近原则”，优先使用局部变量，
想要访问类中的成员变量可以使用this关键词
格式：this.成员变量名     （谁调用的方法，谁就是this）

9.构造方法是用于创建对象的，如果在类中没有编写构造方法，编译器会默认赠送一个无参
的构造方法public 类名（）{}；
注意事项：
（1）如果在类中至少编写了一个构造方法，则编译器不会再赠送构造方法
（2）构造方法的名称必须和所在类名称完全一样
（3）构造方法不要写返回值，连viod都不要写
（4）构造方法不能return一个具体的返回值
（5）构造方法也可以进行重载。

10.一个标准的类有四个组成部分（标准的类也叫Java Bean）：
（1）所有的成员变量都要使用private关键字修饰
（2）为每个成员变量编写一对Getter/Setter方法
（3）编写一个无参数的构造方法
（4）编写一个全参数的构造方法