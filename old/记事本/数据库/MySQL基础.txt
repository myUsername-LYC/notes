1.卸载MySQL要找到my.ini文件并将其删除，否则卸载不干净

2.MySQL服务启动方式
（1）手动
（2）cmd->services.msc打开系统服务界面
（3）使用管理员打开cmd输入net start mysql（启动） |  net stop mysql（停止）

3.登录和退出
登录
（1）mysql [-hip地址 -P端口号] -u用户名 -p（密码）//本地登录 不需要[] 的内容
（3）mysql --host=ip地址 --user=用户名 --password=密码
退出
（1）exit
（2）quit
（3）ctrl + c
查看版本
(1)在sql中输入sql命令: select vetsion();
(2)在cmd中输入cmd命令:mysql --version;或者(mysql --V)
4.数据目录结构：MySQL服务器->数据库->表->数据

5.SQL分类
（1）DDL数据库定义语言：用于定义数据库、表、列
（2）DML数据库操作语言：用来对数据库中表的数据进行增删改
（3）DQL数据库查询语言：用来查询数据库中表的数据记录
（4）DCL数据库控制语言：用来定义数据库的访问权限和安全级别

6.DDL
（1）操作数据库（CRUD）
①创建数据库
* create
	Ⅰ.创建默认字符集的数据库
	Ⅱ.先判断数据库不存在再创建
	Ⅲ.创建指定字符集的数据库
综合语句：create datebase if not exists 数据库名称 character set 字符集名称;
②查询数据库
* show 
	Ⅰ.查询所有数据的名称：show databases;
	Ⅱ.查询某个数据库的字符集：show create database 数据库名称;
③修改数据库
*alter
	Ⅰ.修改数据库的字符集：alter database 数据库名称 character set 字符集名称;
④删除数据库
*drop
	Ⅰ.删除数据库：drop database 数据库名称;
	Ⅱ.先判断数据库存在再删除：drop database if exists 数据库名称;
⑤使用数据库
	Ⅰ.查询当前正在使用的数据库名称：select database();
	Ⅱ.使用数据库：use 数据库名称;
（2）操作表
①创建表
	Ⅰ.语法：create table 表名称(
			列名1 数据类型1，
			列名2 数据类型2，
			......，
			列名n 数据类型n（不要加逗号） 
		);
	Ⅱ.数据库类型：
	1.int：整数类型  （age int）
	2.double：小数类型 （score double（4，2））
	3.date：日期，只包含年月日，yyyy-MM-dd
	4.datetime：日期，只包含年月日时分秒，yyyy-MM-dd HH:mm:ss
	5.timestamp：时间戳类型，包含年月日时分秒（如果不给这个字段赋值或赋值为null，
	则默认为系统时间来自动赋值）
	Ⅲ.复制一个表：create table 表名称 like 基表名称;
②查询表
	Ⅰ.查询当前数据库所有表的名称：show tables;
	Ⅱ.查询某个表的结构：desc 表名称;
③修改表
	Ⅰ.修改表名：alter table 表名 rename to 新表名;
	Ⅱ.修改表的字符集:alter table 表名 character set 字符集名称;
	Ⅲ.添加列：alter table 表名 add 列名 数据类型;
	Ⅳ.修改列名和数据类型：*alter table 表名 change 列名 新列名 新数据类型；
			     *alter table 表名 modify 列名 新数据类型；
	Ⅴ.删除列：alter table 表名 drop 列名；	
④删除表
	Ⅰ.删除表：drop table 表名称；
	Ⅱ.判断存在再删除表：drop table if exists 表名称；

7.DML
（1）添加数据
	语法：insert into 表名（列名1，列名2，...，列名n）values（值1，值2，...，值n）;
	注意事项：①列名和值有一一对应
		②列名省略时，默认是为所有列添加值
		③除了数字类型之外的所有类型都要用引号（单双引号均可）引起来
（2）修改数据
	语法：update 表名 set 列名1=值1，列名2=值2，...，[where 条件]；
	注意事项：如果没有添加条件，则会表中所有的数据记录都更改；
（3）删除数据
	语法：delete from 表名[where 条件]；
	注意事项：①如果不加条件，则删除表中的所有记录。
		②如果要删除表中的所有记录：
			*delete from 表名;   --->不推荐使用，表中有多少条数据，这个语句就会执行多少次
			*truncate table 表名；  --->推荐使用，先删除表，再建一张一样的空表

8.DQL
   
语法：	 		(执行顺序)
	select       		(⑦) 
		字段列表
	from      		(①)
		表格列表
	[连接类型] join	(②)
		 on	(③)
	where		(④)
		条件列表
	group by		(⑤)
		分组列表
	having		(⑥)
		分组之后的条件
	order by		(⑧)	
		排序
	limit		(⑨)
		分页限定
（1）基础查询
	①多个字段查询
	②进行计算
	③去除重复
	④起别名
（2）条件查询
	①where 条件；
	②运算符：比较运算符（特殊的是：等于'='和不等于'<>'） 
		逻辑运算符（AND,OR,BETWEEN...AND..,IN,ISNULL，LIKE）
	③'_'--->单个任意字符，'%'--->多个任意字符

（3）排序查询
	①order by 列名1 排序方式1，列名2 排序方式2；
	②排序方式有升序（asc）和降序（desc）两种，默认是升序。
	③排序的优先级从前往后递减。
（4）聚合函数
	①count，max，min，sum，avg等
	②计算的是不包含null的列项
（5）分组查询
	①group by 列名；
	②分组后的查询的字段是：分组字段、聚合函数
	③按条件分组：where 和 having的区别
	Ⅰ.where是分组前的限制，不满足条件的不参与分组，having是对分组结果的筛选，选出满足条件的分组结果
	Ⅱ.where不能跟聚合函数，having可以跟聚合函数。
（6）分页查询
	①limit 开始索引 每页的记录条数；
	②开始索引 = （当前页数-1）*每页记录条数；（开始索引就是该页面的第一条记录在所有记录中的索引，从0开始）

9.约束
（1）主键约束：primary key  非空且唯一；一张表只能有一个主键；主键是表中记录的唯一标识
	①在创建完成之后添加主键约束：alter table 表名称 modify 列名 数据类型 primary key；
	②删除主键约束：alter table 表名称 drop primary key；
（2）非空约束：not null     值不能为null
	①在创建完成之后添加非空约束：alter table 表名称 modify 列名 数据类型 not null；
	②删除非空约束 ：alter table 表名称 modify 列名 数据类型；
（3）唯一约束：unique 某一列的值不能重复
	①在创建完成之后添加唯一约束：alter table 表名称 modify 列名 数据类型 unique；
	②删除唯一约束：alter table 表名称 drop index 列名；
（4）外键约束：foreign key   让表与表之间产生联系，从而保证数据的正确性。
	①在创建完成之后添加外键约束：alter table 表名称 add 
			constraint 外键名称 foreign key（外键列名称）references 主表名称（主表列名称）； 
	②删除外键约束：alter table 表名称 drop foreign key 外键名称；
	③在创建表时添加外键：将constraint 外键名称 foreign key（外键列名称）references 主表名称（主表列名称）当作
		一个列名项写在外键列之后；
	*注意：外键指向的主表列项必须有键约束；
	*外键的级联操作：级联删除（on delete cascade）和级联更新（on update cascade）
		添加：直接在添加外键之后加上相关代码
		删除：
（5）自动增长：auto_increment  使某一数值类型的列的值自动增长
	①在创建完表之后添加自动增长：alter table 表名称 modify 列名 数值类型 auto_increment;
	②删除自动增长：alter table 表名称 modify 列名 数值类型；
（7）总结：
	①除了外键约束的五个约束（包括自动增长）在表创建时添加约束的方法类似，即
	格式：被约束列名 数据类型 约束类型；
	②表创建完成之后添加约束的方法类似，即
	格式：alter table 表名称 modify 被约束列名 数据类型 约束类型；
	③删除约束：
	Ⅰ.主键约束、唯一约束和外键约束使用格式：alter table 表名称 drop ***；
	Ⅱ.非空约束和自动增长使用格式：alter table 表名称 modify ***；

10.多表之间的关系
（1）一对一（了解，不常用）
	例子：人和身份证
	分析：每个人只能有一个身份证，一个身份证只能有一个人持有
	实现：在任意一张表中添加唯一外键指向另一方的主键
（2）一对多
	例子：员工和部门
	分析：一个部门有多个员工，一个员工只能属于一个部门；
	实现方式：在 '多' 的表中创建一个外键，指向 '一' 的表；
（3）多对多
	例子：学生和课程
	分析：一个学生可以选着多门课程，一门课程可以被多个学生选中
	实现方式：借助第三张表，表中至少有两个字段，分别作为外键指向两张多对多关系表的主键
	
11.数据库设计范式
（1）概念:在设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被称为不同的范式
，各种范式呈递次规范，越高的范式数据冗余越小，目前关系数据库有六种范式：第一范式(1NF)、第二范式(2NF)、
第三范式(3NF)、巴斯-科德范式(BCNF)、第四范式（4NF）和第五范式（完美范式）
（2）相关概念：
①函数依赖：如果通过属性（属性组）A的值能确定唯一的属性B的值，则称B依赖于属性（属性组）A，表示为A——>B
	Ⅰ.完全函数依赖：如果通过属性组A全部属性的值能唯一确定属性B的值，则称B完全依赖于A
	Ⅱ.部份函数依赖：如果通过属性组A部份属性的值就能唯一确定属性B的值，则称B部份依赖于A
②传递函数依赖：如果A——>B，B——>C，则A——>C，这成为传递依赖
③候选码：表中所有的列属性都依赖的最小属性组（能通过码确定唯一的实体集）
	Ⅰ.主属性：码包含的属性都是主属性
	Ⅱ.非主属性：除了主属性之外都是非主属性
（3）分类：
①第一范式：每一列都是不可分割的原子数据项
②第二范式：在1NF的基础上，非码属性必须完全依赖于候选码（即在1NF的基础上消除非码属性对码的部分依赖）
③第三范式：在2NF的基础上，任何非主属性不依赖于非主属性（即在2NF的基础上消除传递依赖）

12.数据库的备份和还原

13.多表查询
（1）相关概念
①笛卡尔积：集合A,B的所有组合称为它们的笛卡尔积
②多表查询主要在于要消除笛卡尔积中的无效数据
（2）内连接
①隐式内连接：
	select 
		列名1，...，列名n    --列名要带上限定词（表名称.）明确是哪个表格的列
	from 	
		表格1，...，表格n    --表格可以有多个
	where 	
		条件                        --此条件能够控制查询到是有效信息
②显示内连接：
	select 
		*
	from
		class t1  [inner] join student t2 
	where 
		t1.classid = t2.stu_classid ;
作用：根据条件查询两个表的交集
（3）外连接
①左外连接：
	select 
		*
	from
		class t1  left [outer] join student t2 
	on 
		t1.classid = t2.stu_classid ;
②右外连接(可与左外连接等效转换)：
	select 
		*
	from
		class t1  right [outer] join student t2 
	on 
		t1.classid = t2.stu_classid ;
作用：查询左（右）表以及根据条件两个表的交集
（4）子查询
一个查询语句查询的结果可以作为另一个查询语句的条件或虚拟表；
子查询是这样一种嵌套查询，甚至可以有多重嵌套，需要为其加上括号 '（）'
子查询结果的三种情况：
①单列单行
子查询的结果是一个值，可作为提供给where子句（作为条件）
②单列多行
结果是单列中的多个值，也可利用逻辑运算符IN（）提供给where 子句
③多列多行
结果可看作一个虚拟表，对其进行表的查询（结合其他表）

14.事务
（1）概念 ：事务可以管理（封装）一个包含了多个步骤的业务操作，使这些操作具有一致性（同时成功或同时失败）
（2）操作：
①开启事务：start transaction
②回滚：rollback
	*如果在某个步骤产生了错误，可使用回滚将一切状态恢复到开启事务的时刻
③提交：commit
	*事务提交的两种方式：
		Ⅰ.自动提交：MySQL就是自动提交，一条DML语句就会自动提交一次事务
		Ⅱ.手动提交：需要先开启事务，再提交
	*修改事务的默认提交方式：
		Ⅰ.查看事务的默认提交方式：select @@autocommit；
		Ⅱ.修改默认提交方式：set @@autocommit = 0；
（3）四大特征：
①原子性：是不可分割的最小操作单位
②隔离性：多个事务之间相互独立
③一致性：事务操作前后，数据总量不变
④持久性：当事务提交或回滚后，数据库会持久化的保存数据。
（3）隔离级别
①相关概念
Ⅰ.多个事务操作同一批数据时，会引发一些问题，主要通过设置不同的隔离级别来解决这些问题
Ⅱ.可能产生的问题：
	1.脏读：一个事务能够读取到另一个事务中没有提交的数据
	2.不可重复读（虚读）：在同一个事务中两次读取到的数据不一样
	3.幻读：在一个事务中读不到另一个事务对数据的操作（DML）
②隔离级别：
	1.read uncommitted：读未提交  （可能发生脏读、虚读和幻读）
	2.read committed：读已提交    (可能发生虚读和幻读)
	3.repeatable read：可重复读  （可能发生幻读，MySQL默认）
	4.serializable：串行化 （不会产生问题）
③查询和设置隔离级别：
	1.查询：select @@tx_isolation；
	2.设置：set global transation isolation level 级别字符串；（设置完后需要重新连接才生效）

15.DCL
用户的管理和授权
1.管理用户：
	①添加用户：create user '用户名'@'主机名' identified by '密码'；
	②删除用户：drop user '用户名'@'主机名'；
	③修改用户密码：
	Ⅰ.update user set password = password('新密码') where user='用户名';
	Ⅱ.set password for '用户名'@'主机名' = password('新密码')；
	要是忘了root用户的密码就去百度如何改	
	④查询用户：use mysql；select * from user；
	--通配符%是指任意主机
2.授权
	①查询权限：show grants for '用户名'@'主机名';
	②授予权限：grant 权限列表 on数据库名.表名 to '用户名'@'主机名';
	③撤销权限：revoke 权限列表 on 数据库名.表名 from '用户名'@'主机名'；
	在撤销和授予权限中，all表示所有权限，*可以是表示数据库和表名的通配符
	